name: Quality Assurance

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC

jobs:
  # Static Analysis
  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run Flutter analyze
      run: flutter analyze --no-fatal-infos
      
    - name: Run Dart analyze
      run: dart analyze --fatal-infos .
      
    - name: Run custom lint rules
      run: dart run custom_linter:analyze
      
    - name: Check for unused code
      run: dart run unused_code
      
    - name: Check for deprecated APIs
      run: dart run deprecated_api_checker

  # Code Formatting
  code-formatting:
    name: Code Formatting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Check Dart formatting
      run: dart format --set-exit-if-changed .
      
    - name: Check import sorting
      run: dart run import_sorter
      
    - name: Check file naming conventions
      run: dart run file_naming_convention

  # Test Coverage
  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run tests with coverage
      run: flutter test --coverage
      
    - name: Check coverage threshold
      run: |
        coverage=$(dart run coverage:format_coverage --lcov --in=coverage/lcov.info --out=- | grep -oP '(?<=SF:).*' | wc -l)
        echo "Coverage: $coverage%"
        if [ $coverage -lt 85 ]; then
          echo "Coverage below 85% threshold"
          exit 1
        fi
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  # Performance Analysis
  performance-analysis:
    name: Performance Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run performance tests
      run: flutter test test/performance/
      
    - name: Generate performance report
      run: dart run performance_report
      
    - name: Check performance thresholds
      run: |
        dart run performance_threshold_checker

  # Accessibility Testing
  accessibility-testing:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run accessibility tests
      run: flutter test test/accessibility/
      
    - name: Check WCAG compliance
      run: dart run wcag_compliance_checker

  # Documentation Quality
  documentation-quality:
    name: Documentation Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate documentation
      run: dart doc
      
    - name: Check documentation coverage
      run: dart run documentation_coverage
      
    - name: Validate documentation examples
      run: dart run documentation_examples

  # Security Scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run security scan
      run: dart run security_scan
      
    - name: Check for vulnerabilities
      run: dart run vulnerability_scanner
      
    - name: Run CodeQL analysis
      uses: github/codeql-action/init@v2
      with:
        languages: dart
        
    - name: Perform CodeQL analysis
      uses: github/codeql-action/analyze@v2

  # Dependency Analysis
  dependency-analysis:
    name: Dependency Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Analyze dependencies
      run: flutter pub deps --style=tree
      
    - name: Check for outdated dependencies
      run: flutter pub outdated
      
    - name: Validate dependencies
      run: dart run dependency_validator

  # Quality Gate
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [
      static-analysis,
      code-formatting,
      test-coverage,
      performance-analysis,
      accessibility-testing,
      documentation-quality,
      security-scan,
      dependency-analysis
    ]
    
    steps:
    - name: Quality gate check
      run: |
        echo "All quality checks passed!"
        echo "✅ Static Analysis"
        echo "✅ Code Formatting"
        echo "✅ Test Coverage"
        echo "✅ Performance Analysis"
        echo "✅ Accessibility Testing"
        echo "✅ Documentation Quality"
        echo "✅ Security Scan"
        echo "✅ Dependency Analysis"
        
    - name: Generate quality report
      run: |
        echo "# Quality Report" >> $GITHUB_STEP_SUMMARY
        echo "Generated on: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Quality Metrics" >> $GITHUB_STEP_SUMMARY
        echo "- Static Analysis: ✅ Passed" >> $GITHUB_STEP_SUMMARY
        echo "- Code Formatting: ✅ Passed" >> $GITHUB_STEP_SUMMARY
        echo "- Test Coverage: ✅ 85%+" >> $GITHUB_STEP_SUMMARY
        echo "- Performance: ✅ Within thresholds" >> $GITHUB_STEP_SUMMARY
        echo "- Accessibility: ✅ WCAG compliant" >> $GITHUB_STEP_SUMMARY
        echo "- Documentation: ✅ Complete" >> $GITHUB_STEP_SUMMARY
        echo "- Security: ✅ No vulnerabilities" >> $GITHUB_STEP_SUMMARY
        echo "- Dependencies: ✅ Validated" >> $GITHUB_STEP_SUMMARY