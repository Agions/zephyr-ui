# chromaUI Version Management Configuration
# Enterprise-grade version management and dependency tracking

# Version information
version: 1.0.0+1
build_number: 1
version_code: 1

# Version management strategy
versioning:
  strategy: semantic
  major_version: 1
  minor_version: 0
  patch_version: 0
  build_number: 1

# Version history
version_history:
  - version: "1.0.0+1"
    date: "2024-01-01"
    changes:
      - "Initial enterprise-grade release"
      - "Complete component library with 60+ components"
      - "Enterprise architecture with dependency injection"
      - "Comprehensive testing infrastructure"
      - "Performance optimization features"
      - "Multi-language documentation"

# Dependency management
dependencies:
  # Core dependencies with version constraints
  flutter:
    min_version: "3.19.0"
    max_version: "4.0.0"
  dart:
    min_version: "3.3.0"
    max_version: "4.0.0"

# Update policies
update_policies:
  # Automatic update policies for different dependency types
  core_dependencies:
    strategy: "patch"
    schedule: "monthly"
  ui_dependencies:
    strategy: "minor"
    schedule: "quarterly"
  dev_dependencies:
    strategy: "latest"
    schedule: "weekly"
  testing_dependencies:
    strategy: "patch"
    schedule: "monthly"

# Security scanning
security:
  # Security scanning configuration
  scan_frequency: "daily"
  vulnerability_threshold: "medium"
  license_check: true
  compliance_standards:
    - "SOC2"
    - "GDPR"
    - "CCPA"

# Quality gates
quality_gates:
  # Quality thresholds for releases
  test_coverage: 80
  code_quality: 90
  performance_score: 85
  accessibility_score: 95
  documentation_coverage: 90

# Release management
release_management:
  # Release process configuration
  release_branch: "main"
  develop_branch: "develop"
  hotfix_branch: "hotfix"

  # Release automation
  auto_tag: true
  auto_changelog: true
  auto_documentation: true

  # Release approval
  require_approval: true
  approval_roles:
    - "maintainer"
    - "lead-developer"

# Build configuration
build_configuration:
  # Build variants
  variants:
    - name: "development"
      flutter_channel: "stable"
      dart_defines:
        - "FLAVOR=dev"
        - "ENVIRONMENT=development"
    - name: "staging"
      flutter_channel: "stable"
      dart_defines:
        - "FLAVOR=staging"
        - "ENVIRONMENT=staging"
    - name: "production"
      flutter_channel: "stable"
      dart_defines:
        - "FLAVOR=prod"
        - "ENVIRONMENT=production"

# Environment configuration
environments:
  # Environment-specific settings
  development:
    debug_enabled: true
    logging_level: "debug"
    analytics_enabled: false
    crash_reporting: false

  staging:
    debug_enabled: false
    logging_level: "info"
    analytics_enabled: true
    crash_reporting: true

  production:
    debug_enabled: false
    logging_level: "warning"
    analytics_enabled: true
    crash_reporting: true

# Dependency constraints
constraints:
  # Hard constraints for critical dependencies
  flutter: ">=3.19.0 <4.0.0"
  dart: ">=3.3.0 <4.0.0"

  # Recommended constraints
  provider: "^6.1.2"
  riverpod: "^2.4.9"
  get_it: "^7.6.4"

  # Development constraints
  flutter_lints: "^3.0.1"
  build_runner: "^2.4.7"
  mocktail: "^1.0.1"

# Backup and recovery
backup:
  # Backup configuration
  enabled: true
  frequency: "daily"
  retention_days: 30
  backup_types:
    - "source_code"
    - "dependencies"
    - "build_artifacts"
    - "documentation"

# Monitoring and alerting
monitoring:
  # Monitoring configuration
  enabled: true
  metrics_collection: true
  error_tracking: true
  performance_monitoring: true

  # Alert thresholds
  alert_thresholds:
    build_failure_rate: 5
    test_failure_rate: 10
    performance_regression: 15
    memory_usage_increase: 20
